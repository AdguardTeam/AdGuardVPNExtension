---
version: 2
plan:
  project-key: ADGEXT
  key: AVRELEASESPECS
  name: vpn-extension - build release
variables:
  dockerNode: adguard/node-ssh:22.17--0
  stageEnv: prod
  buildType: release

stages:
  - Size Check:
      manual: false
      final: false
      jobs:
        - Check Bundle Size
  - Build:
      manual: false
      final: false
      jobs:
        - Build

Check Bundle Size:
  key: SIZECHECK
  other:
    clean-working-dir: true
  docker:
    image: ${bamboo.dockerNode}
    volumes:
      ${system.PNPM_DIR}: "${bamboo.cachePnpm}"
  tasks:
    - checkout:
        force-clean-build: 'true'
    - script:
        interpreter: SHELL
        scripts:
          - |-
            set -x
            set -e

            # Fix mixed logs
            exec 2>&1

            ls -la

            # Set cache directory
            pnpm config set store-dir ${bamboo.cachePnpm}

            # Install dependencies
            pnpm install ${bamboo.varsPnpm}

            export STAGE_ENV="${bamboo.stageEnv}"
            export VPN_API_URL="${bamboo.prodVpnApiUrl}"
            export AUTH_API_URL="${bamboo.prodAuthApiUrl}"
            export FORWARDER_DOMAIN="${bamboo.prodVpnForwarderDomain}"

            echo "Executing build for ${bamboo.buildType}"

            # Run build
            pnpm ${bamboo.buildType}

            # Create artifacts directory if it doesn't exist
            mkdir -p artifacts

            echo "Checking bundle sizes"
            pnpm bundle-size check ${bamboo.buildType}
  final-tasks:
    - script:
        interpreter: SHELL
        scripts:
          - |-
            set -x
            set -e

            # Fix mixed logs
            exec 2>&1

            ls -la

            echo "Size before cleanup:" && du -h | tail -n 1
            rm -rf node_modules build
            echo "Size after cleanup:" && du -h | tail -n 1
  requirements:
    - adg-docker: 'true'

Build:
  key: BUILD
  docker:
    image: ${bamboo.dockerNode}
    volumes:
      ${system.PNPM_DIR}: "${bamboo.cachePnpm}"
  tasks:
    - checkout:
        force-clean-build: true
    - checkout:
        repository: extensions-private
        path: private
        force-clean-build: true
    - script:
        interpreter: SHELL
        scripts:
          - |-
            set -x
            set -e

            # Fix mixed logs
            exec 2>&1

            ls -alt

            # Set cache directory
            pnpm config set store-dir ${bamboo.cachePnpm}

            # Install dependencies
            pnpm install ${bamboo.varsPnpm}

            pnpm lint
            pnpm test:ci
            pnpm locales validate --min

            export STAGE_ENV="${bamboo.stageEnv}"
            export VPN_API_URL="${bamboo.prodVpnApiUrl}"
            export AUTH_API_URL="${bamboo.prodAuthApiUrl}"
            export FORWARDER_DOMAIN="${bamboo.prodVpnForwarderDomain}"
            pnpm ${bamboo.buildType}

            # build artifacts chrome.crx
            pnpm crx:${bamboo.buildType}

            # archive source for Firefox review
            ./bamboo-specs/scripts/archive-source.sh ${bamboo.buildType}
    - inject-variables:
        file: build/${bamboo.buildType}/build.txt
        scope: RESULT
        namespace: inject
    - any-task:
        plugin-key: com.atlassian.bamboo.plugins.vcs:task.vcs.tagging
        configuration:
          selectedRepository: defaultRepository
          tagName: v${bamboo.inject.version}
  final-tasks:
    - test-parser:
        type: junit
        test-results: 'tests-reports/unit-tests.xml'
    - script:
        interpreter: SHELL
        scripts:
          - |-
            set -x
            set -e

            # Fix mixed logs
            exec 2>&1

            ls -la

            echo "Size before cleanup:" && du -h | tail -n 1
            rm -rf node_modules
            echo "Size after cleanup:" && du -h | tail -n 1
  artifacts:
    - name: edge.zip
      location: build/${bamboo.buildType}
      pattern: edge.zip
      shared: true
      required: true
    - name: chrome.zip
      location: build/${bamboo.buildType}
      pattern: chrome.zip
      shared: true
      required: true
    - name: opera.zip
      location: build/${bamboo.buildType}
      pattern: opera.zip
      shared: true
      required: true
    - name: firefox.zip
      location: build/${bamboo.buildType}
      pattern: firefox.zip
      shared: true
      required: true
    - name: chrome.crx
      location: build/${bamboo.buildType}
      pattern: chrome.crx
      shared: true
      required: true
    - name: build.txt
      location: build/${bamboo.buildType}
      pattern: build.txt
      shared: true
      required: true
    - name: source.zip
      location: build/${bamboo.buildType}
      pattern: source.zip
      shared: true
      required: true
  requirements:
    - adg-docker: 'true'

triggers: []

branches:
  create: manually
  delete: never
  link-to-jira: true

notifications:
  - events:
      - plan-status-changed
    recipients:
      - webhook:
          name: Build webhook
          url: http://prod.jirahub.service.eu.consul/v1/webhook/bamboo
labels: []
other:
  concurrent-build-plugin: system-default
